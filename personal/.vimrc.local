"Mapping table
"Ctrl+Tab         : Switch buffers
"<Leader>bg       : Close current buffer
"<Leader>bod      : Close all other buffers
"<F7>             : Toggle spell
"<F5>             : Search filename without extension
"<F6>             : Search files word under cursor or selected content
"<Leader>cf       : Search keyword in files
"Visual <Leader>f : Search selected word in current file
"<Shift-P>        : Open CtrlP in MRU mode
if has('win32') && has('directx') && has('gui')
    set rop=type:directx,gamma:1.0,contrast:0.5,level:1,geom:1,renmode:4,taamode:1
endif
set nospell
nmap <C-TAB>     : bn <CR>
nmap <Leader>bd  : call MyCloseBuffer() <CR>
nmap <Leader>bod : call MyCloseOtherBuffers() <CR>
set fileencodings=ucs-bom,utf-8,latin1
silent map <F7> :setlocal spell!<CR>

if isdirectory(expand('~/.vim/bundle/vim-airline/'))
    let g:airline#extensions#bufferline#enabled = 0
    let g:airline_section_warning = ''
    let g:airline_theme = 'light'
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#buffer_nr_show = 1
    let g:airline#extensions#tabline#formatter = 'unique_tail'
endif
vnoremap <expr> <Leader>f 'y/\V'.escape(@",'\').'<CR>'
set background=dark
if isdirectory(expand("~/.vim/bundle/vim-colors-solarized/"))
    let g:solarized_menu = 0
endif
set background=dark
colorscheme solarized
if has('nvim')
    color flattened_dark
endif
autocmd Filetype c nested set nolist
autocmd Filetype cpp nested set nolist
set tags=tags
"set foldmethod=syntax
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe,*.o,.git  " Windows
let g:tagbar_python_system = '1'
set ffs=unix,dos

"NERDTree Optoins
let NERDTreeRespectWildIgnore = 1
let NERDTreeQuitOnOpen = 0
let g:signify_vcs_list = ['git']
"starting from $HOME
cd $HOME
if isdirectory(expand("~/.vim/bundle/ctrlp.vim/"))
    let g:ctrlp_by_filename = 1
    let g:ctrlp_use_caching = 1
    let g:ctrlp_lazy_update = 0
    let g:ctrlp_max_files = 1000000
    let g:ctrlp_max_depth = 100
    let g:ctrlp_working_path_mode = 'ra'
    noremap <F5> : call SearchCtrlpContent( expand('%:t:r'))<CR>
    noremap <S-P> :CtrlPMRUFiles<CR>
    nmap <F6> <C-P><C-\>w
    vmap <F6> "ay:CtrlP<CR><C-\>ra
    if isdirectory(expand("~/.vim/bundle/ctrlp-py-matcher/"))
        let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }
    endif
    "noremap <Alt-P> :CtrlPBuffer<cr>
endif


if isdirectory(expand('~/.vim/bundle/ycm_simple_conf'))
    let g:ycm_simple_conf_active = 1
endif

if isdirectory(expand('~/.vim/bundle/YouCompleteMe/'))
    let g:ycm_global_ycm_extra_conf = 'ycm_simple_conf.py'
endif

if isdirectory(expand('~/.vim/bundle/vim-fugitive/'))
    autocmd BufReadPost fugitive://* set bufhidden=delete
endif

fun! MyCloseOtherBuffers()   
    let curbuf = bufname(bufnr(""))
    if buflisted(curbuf) == 0
        return
    endif

    let c = 1
    while c <= bufnr("$")
        let itername = bufname(c)
        if buflisted(itername) && itername != curbuf
            execute ':Bclose '.c
        endif
    let c = c + 1
    endwhile
endfunction

fun! MyCloseBuffer()
    let curbuf = matchstr("fugitive://",bufname(bufnr("")))
    if empty(curbuf)
        execute ":Bclose "
    endif
endfun

fun! SearchCtrlpContent(content)
    let @a=a:content
    execute "normal \<C-p>\<C-\>ra"
endfun

if executable('ag')
    noremap <Leader>cf :Ack <cword><CR>
    vnoremap <Leader>cf y:Ack <C-r>=fnameescape(@")<CR><CR>
endif


if has('win32') && $HOME_SERV != '' && $USERNAME != ''
    let g:netrw_liststyle = 3
    noremap <Leader>h :call OpenRemoteHome()<CR>
    if executable('plink.exe')
        let g:netrw_cygwin = 0
        let g:netrw_ssh_cmd  = '"plink.exe" -i C:\cygwin64\home\esipeng\.ssh\id_rsa.ppk -batch -T -ssh'
        let g:netrw_list_cmd = '"plink.exe" -i C:\cygwin64\home\esipeng\.ssh\id_rsa.ppk HOSTNAME ls -Fa'
    endif

    if executable('pscp.exe')
        let g:netrw_scp_cmd  = '"pscp.exe"  -i C:\cygwin64\home\esipeng\.ssh\id_rsa.ppk -batch -q -batch -scp'
    endif

endif

fun! OpenRemoteHome()
    exec "120vs"
    exec "wincmd p"
    exec "e scp://" . $USERNAME . "@" . $HOME_SERV. "/"
endfun

if isdirectory(expand('~/.vim/bundle/YouCompleteMe'))
    nnoremap <leader>jd :YcmCompleter GoTo<CR>

endif

